image: registry.gitlab.com/longkey1/docker-go:latest

stages:
  - build
  - release

variables:
  BIN_DIR: "${CI_PROJECT_DIR}/_bin"
  DIST_DIR: "${CI_PROJECT_DIR}/_dist"

build:
  stage: build
  variables:
    GOX_OS: "linux"
    GOX_ARCH: "amd64"
  script:
    - mkdir -p ${BIN_DIR}
    - mkdir -p ${DIST_DIR}
    - mkdir -p tmp
    - cp -a ${CI_PROJECT_DIR} ${GOPATH}/src
    - cd ${GOPATH}/src/${CI_PROJECT_NAME}
    - dep ensure
    - go build -o ${BIN_DIR}/fdl
    - gox -os="${GOX_OS}" -arch="${GOX_ARCH}" -output="tmp/{{.Dir}}_{{.OS}}_{{.Arch}}" ./...
    - |
      pushd tmp; \
      for TARGET in $(find . -mindepth 1 -maxdepth 1 -type f); do \
        ARCHIVE_NAME="$(basename ${TARGET})"; \
        zip -r ${DIST_DIR}/${ARCHIVE_NAME}.zip ./${ARCHIVE_NAME}; \
      done; \
      popd
  cache:
    key: ${CI_COMMIT_REF_SLUG}
    paths:
      - _bin/
      - _dist/
    policy: push

release_github:
  stage: release
  script:
    - ls -al ${BIN_DIR}
    - ls -al ${DIST_DIR}
    - ghr -t ${GITHUB_TOKEN} -u longkey1 -r fdl v$(${BIN_DIR}/fdl version | cut -d " " -f 3) ${DIST_DIR}
  cache:
    key: ${CI_COMMIT_REF_SLUG}
    paths:
      - _bin/
      - _dist/
    policy: pull
  only:
    - master

release_gitlab:
  stage: release
  script:
    - ls -al ${BIN_DIR}
    - ls -al ${DIST_DIR}
    - glr -t ${GITLAB_TOKEN} ${CI_PROJECT_PATH} v$(${BIN_DIR}/fdl version | cut -d " " -f 3) ${DIST_DIR}
  cache:
    key: ${CI_COMMIT_REF_SLUG}
    paths:
      - _bin/
      - _dist/
    policy: pull
  only:
    - master
